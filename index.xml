<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mike Turko</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Mike Turko</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>youremail@domain.com (Mike Turko)</managingEditor>
    <webMaster>youremail@domain.com (Mike Turko)</webMaster>
    <lastBuildDate>Wed, 12 Feb 2025 17:12:26 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Design Confidence: 5 Non-Designer Hacks to Craft Pro Visuals</title>
      <link>http://localhost:1313/post/graphic-design/2025/design-confidence/</link>
      <pubDate>Wed, 12 Feb 2025 17:12:26 -0500</pubDate><author>youremail@domain.com (Mike Turko)</author>
      <guid>http://localhost:1313/post/graphic-design/2025/design-confidence/</guid>
      <description>&lt;h3 id=&#34;ever-felt-like-your-designs-are-shouting-when-they-should-whisper&#34;&gt;Ever felt like your designs are shouting when they should whisper?&lt;/h3&gt;&#xA;&lt;p&gt;You’re not alone. In a world where 85% of users form first impressions based on visual content (&lt;em&gt;Stanford Research&lt;/em&gt;), even small design tweaks can transform chaos into clarity. Let’s explore five principles to help you create visuals that feel intentional—not accidental.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5 Simple Design Hacks to Help Non-Designers Create Professional Results</title>
      <link>http://localhost:1313/post/five-design-hacks/</link>
      <pubDate>Sun, 09 Feb 2025 16:42:36 -0500</pubDate><author>youremail@domain.com (Mike Turko)</author>
      <guid>http://localhost:1313/post/five-design-hacks/</guid>
      <description>&lt;p&gt;Creating professional visuals doesn’t require years of training. Whether you’re designing social posts, flyers, or slides, these five strategic hacks will help you craft polished graphics that command attention. Let’s turn your DIY designs from &amp;ldquo;meh&amp;rdquo; to masterpiece.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Find Your Time</title>
      <link>http://localhost:1313/post/find-your-time/</link>
      <pubDate>Thu, 06 Feb 2025 20:02:08 -0500</pubDate><author>youremail@domain.com (Mike Turko)</author>
      <guid>http://localhost:1313/post/find-your-time/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;    &lt;title&gt;Triathlon Time Calculator&lt;/title&gt;&#xA;    &lt;style&gt;&#xA;        .container2 {&#xA;            max-width: 100%;&#xA;            margin: 0px auto;&#xA;            padding: 20px;&#xA;            font-family: Arial, sans-serif;&#xA;        }&#xA;        .input-group2 {&#xA;            margin: 15px 0;&#xA;        }&#xA;        label {&#xA;            display: block;&#xA;            margin-bottom: 5px;&#xA;        }&#xA;        input, select {&#xA;            width: 100%;&#xA;            padding: 8px;&#xA;            margin-bottom: 5px;&#xA;        }&#xA;        .event-time {&#xA;            font-size: 0.9em;&#xA;            color: #666;&#xA;            margin-bottom: 10px;&#xA;        }&#xA;        #result {&#xA;            font-size: 1.2em;&#xA;            font-weight: bold;&#xA;            margin-top: 20px;&#xA;            padding: 15px;&#xA;            background-color: #f0f0f0;&#xA;            border-radius: 4px;&#xA;        }&#xA;    &lt;/style&gt;&#xA;&lt;/head&gt;&#xA;&lt;body&gt;&#xA;    &lt;div class=&#34;container2&#34;&gt;&#xA;        &lt;h2&gt;Triathlon Time Calculator&lt;/h2&gt;&#xA;        &#xA;        &lt;div class=&#34;input-group2&#34;&gt;&#xA;            &lt;label for=&#34;raceType&#34;&gt;Select Race Type:&lt;/label&gt;&#xA;            &lt;select id=&#34;raceType&#34;&gt;&#xA;                &lt;option value=&#34;sprint&#34;&gt;Sprint Triathlon&lt;/option&gt;&#xA;                &lt;option value=&#34;olympic&#34; selected&gt;Olympic Triathlon&lt;/option&gt;&#xA;                &lt;option value=&#34;70.3&#34;&gt;70.3 Ironman&lt;/option&gt;&#xA;                &lt;option value=&#34;ironman&#34;&gt;Ironman&lt;/option&gt;&#xA;            &lt;/select&gt;&#xA;        &lt;/div&gt;&#xA;&#xA;        &lt;div class=&#34;input-group2&#34;&gt;&#xA;            &lt;label for=&#34;swim&#34;&gt;Swim Pace (minutes per 100 yards):&lt;/label&gt;&#xA;            &lt;input type=&#34;number&#34; id=&#34;swim&#34; step=&#34;0.1&#34; value=&#34;2.0&#34;&gt;&#xA;            &lt;div class=&#34;event-time&#34;&gt;&lt;span id=&#34;swimDistance&#34;&gt;1640&lt;/span&gt; yd Swim Time: &lt;span id=&#34;swimTime&#34;&gt;0:00:00&lt;/span&gt;&lt;/div&gt;&#xA;        &lt;/div&gt;&#xA;&#xA;        &lt;div class=&#34;input-group2&#34;&gt;&#xA;            &lt;label for=&#34;t1&#34;&gt;T1 Transition Time (minutes):&lt;/label&gt;&#xA;            &lt;input type=&#34;number&#34; id=&#34;t1&#34; step=&#34;0.1&#34; value=&#34;2.0&#34;&gt;&#xA;        &lt;/div&gt;&#xA;&#xA;        &lt;div class=&#34;input-group2&#34;&gt;&#xA;            &lt;label for=&#34;bike&#34;&gt;Bike Speed (mph):&lt;/label&gt;&#xA;            &lt;input type=&#34;number&#34; id=&#34;bike&#34; step=&#34;0.1&#34; value=&#34;20.0&#34;&gt;&#xA;            &lt;div class=&#34;event-time&#34;&gt;&lt;span id=&#34;bikeDistance&#34;&gt;24.8&lt;/span&gt; mi Bike Time: &lt;span id=&#34;bikeTime&#34;&gt;0:00:00&lt;/span&gt;&lt;/div&gt;&#xA;        &lt;/div&gt;&#xA;&#xA;        &lt;div class=&#34;input-group2&#34;&gt;&#xA;            &lt;label for=&#34;t2&#34;&gt;T2 Transition Time (minutes):&lt;/label&gt;&#xA;            &lt;input type=&#34;number&#34; id=&#34;t2&#34; step=&#34;0.1&#34; value=&#34;1.0&#34;&gt;&#xA;        &lt;/div&gt;&#xA;&#xA;        &lt;div class=&#34;input-group2&#34;&gt;&#xA;            &lt;label for=&#34;run&#34;&gt;Run Pace (minutes per mile):&lt;/label&gt;&#xA;            &lt;input type=&#34;number&#34; id=&#34;run&#34; step=&#34;0.1&#34; value=&#34;8.0&#34;&gt;&#xA;            &lt;div class=&#34;event-time&#34;&gt;&lt;span id=&#34;runDistance&#34;&gt;6.2&lt;/span&gt; mi Run Time: &lt;span id=&#34;runTime&#34;&gt;0:00:00&lt;/span&gt;&lt;/div&gt;&#xA;        &lt;/div&gt;&#xA;&#xA;        &lt;div id=&#34;result&#34;&gt;&lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;    &lt;script&gt;&#xA;        const raceDistances = {&#xA;            sprint: { swim: 820, bike: 12.4, run: 3.1 },    // 750m/20km/5km converted&#xA;            olympic: { swim: 1640, bike: 24.8, run: 6.2 },  // 1500m/40km/10km converted&#xA;            &#39;70.3&#39;: { swim: 2112, bike: 56, run: 13.1 },    // 1.2mi/56mi/13.1mi&#xA;            ironman: { swim: 4224, bike: 112, run: 26.2 }   // 2.4mi/112mi/26.2mi&#xA;        };&#xA;&#xA;        function formatTime(minutes) {&#xA;            const hours = Math.floor(minutes / 60);&#xA;            const mins = Math.floor(minutes % 60);&#xA;            const secs = Math.round((minutes * 60) % 60);&#xA;            return `${hours}:${mins.toString().padStart(2, &#39;0&#39;)}:${secs.toString().padStart(2, &#39;0&#39;)}`;&#xA;        }&#xA;&#xA;        function calculateTime() {&#xA;            // Get input values&#xA;            const raceType = document.getElementById(&#39;raceType&#39;).value;&#xA;            const swimPace = parseFloat(document.getElementById(&#39;swim&#39;).value);&#xA;            const bikeSpeed = parseFloat(document.getElementById(&#39;bike&#39;).value);&#xA;            const runPace = parseFloat(document.getElementById(&#39;run&#39;).value);&#xA;            const t1 = parseFloat(document.getElementById(&#39;t1&#39;).value) || 0;&#xA;            const t2 = parseFloat(document.getElementById(&#39;t2&#39;).value) || 0;&#xA;&#xA;            // Validate inputs&#xA;            if ([swimPace, bikeSpeed, runPace, t1, t2].some(x =&gt; x &lt; 0 || isNaN(x))) {&#xA;                document.getElementById(&#39;result&#39;).textContent = &#34;Please enter valid non-negative numbers&#34;;&#xA;                return;&#xA;            }&#xA;&#xA;            // Get race distances&#xA;            const distances = raceDistances[raceType];&#xA;            &#xA;            // Update displayed distances&#xA;            document.getElementById(&#39;swimDistance&#39;).textContent = distances.swim;&#xA;            document.getElementById(&#39;bikeDistance&#39;).textContent = distances.bike;&#xA;            document.getElementById(&#39;runDistance&#39;).textContent = distances.run;&#xA;&#xA;            // Calculate individual times&#xA;            const swimTime = (swimPace * distances.swim) / 100;&#xA;            const bikeTime = (distances.bike / bikeSpeed) * 60;&#xA;            const runTime = runPace * distances.run;&#xA;&#xA;            // Display individual event times&#xA;            document.getElementById(&#39;swimTime&#39;).textContent = formatTime(swimTime);&#xA;            document.getElementById(&#39;bikeTime&#39;).textContent = formatTime(bikeTime);&#xA;            document.getElementById(&#39;runTime&#39;).textContent = formatTime(runTime);&#xA;&#xA;            // Calculate total time&#xA;            const totalMinutes = swimTime + t1 + bikeTime + t2 + runTime;&#xA;            &#xA;            // Display formatted total time&#xA;            document.getElementById(&#39;result&#39;).textContent = &#xA;                `Total Time (${document.getElementById(&#39;raceType&#39;).options[document.getElementById(&#39;raceType&#39;).selectedIndex].text}): ${formatTime(totalMinutes)}`;&#xA;        }&#xA;&#xA;        // Add event listeners&#xA;        document.querySelectorAll(&#39;input, select&#39;).forEach(element =&gt; {&#xA;            element.addEventListener(&#39;input&#39;, calculateTime);&#xA;        });&#xA;&#xA;        // Initial calculation&#xA;        calculateTime();&#xA;    &lt;/script&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;</description>
    </item>
    <item>
      <title>About me</title>
      <link>http://localhost:1313/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>youremail@domain.com (Mike Turko)</author>
      <guid>http://localhost:1313/page/about/</guid>
      <description>&lt;p&gt;My name is Inigo Montoya. I have the following qualities:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
