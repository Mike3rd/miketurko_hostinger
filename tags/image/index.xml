<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Image on Mike Turko</title>
    <link>https://miketurko.com/tags/image/</link>
    <description>Recent content in Image on Mike Turko</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>youremail@domain.com (Mike Turko)</managingEditor>
    <webMaster>youremail@domain.com (Mike Turko)</webMaster>
    <lastBuildDate>Mon, 02 Dec 2024 11:03:47 -0500</lastBuildDate>
    <atom:link href="https://miketurko.com/tags/image/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>BaseurlTest</title>
      <link>https://miketurko.com/post/baseurltest/</link>
      <pubDate>Mon, 02 Dec 2024 11:03:47 -0500</pubDate><author>youremail@domain.com (Mike Turko)</author>
      <guid>https://miketurko.com/post/baseurltest/</guid>
      <description>&lt;h1 id=&#34;7-essential-graphic-design-tips-for-non-designers&#34;&gt;7 Essential Graphic Design Tips for Non-Designers&lt;/h1&gt;&#xA;&lt;p&gt;Creating compelling designs is achievable even without formal training. Whether you&amp;rsquo;re managing social media posts, ad banners, or your own website, these graphic design tips will help you craft professional-looking visuals:&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-leverage-white-space&#34;&gt;1. Leverage White Space&lt;/h2&gt;&#xA;&lt;p&gt;White space, or negative space, is crucial in design. It improves readability and separates elements. Ensure your layout isn&amp;rsquo;t overcrowded to maintain a clean, appealing look.&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-limit-fonts-to-two&#34;&gt;2. Limit Fonts to Two&lt;/h2&gt;&#xA;&lt;p&gt;For clarity, use no more than two fonts. Pair one for headings and another for body text. This simplicity enhances readability and gives your design a polished look.&lt;/p&gt;</description>
    </item>
    <item>
      <title>December</title>
      <link>https://miketurko.com/post/december/</link>
      <pubDate>Sun, 01 Dec 2024 15:18:29 -0500</pubDate><author>youremail@domain.com (Mike Turko)</author>
      <guid>https://miketurko.com/post/december/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;    &lt;title&gt;Triathlon Time Calculator&lt;/title&gt;&#xA;    &lt;style&gt;&#xA;        .container2 {&#xA;            max-width: 100%;&#xA;            margin: 20px auto;&#xA;            padding: 20px;&#xA;            font-family: Arial, sans-serif;&#xA;        }&#xA;        .input-group {&#xA;            margin: 15px 0;&#xA;        }&#xA;        label {&#xA;            display: block;&#xA;            margin-bottom: 5px;&#xA;        }&#xA;        input, select {&#xA;            width: 100%;&#xA;            padding: 8px;&#xA;            margin-bottom: 5px;&#xA;        }&#xA;        .event-time {&#xA;            font-size: 0.9em;&#xA;            color: #666;&#xA;            margin-bottom: 10px;&#xA;        }&#xA;        #result {&#xA;            font-size: 1.2em;&#xA;            font-weight: bold;&#xA;            margin-top: 20px;&#xA;            padding: 15px;&#xA;            background-color: #f0f0f0;&#xA;            border-radius: 4px;&#xA;        }&#xA;    &lt;/style&gt;&#xA;&lt;/head&gt;&#xA;&lt;body&gt;&#xA;    &lt;div class=&#34;container2&#34;&gt;&#xA;        &lt;h2&gt;Triathlon Time Calculator&lt;/h2&gt;&#xA;        &#xA;        &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;label for=&#34;raceType&#34;&gt;Select Race Type:&lt;/label&gt;&#xA;            &lt;select id=&#34;raceType&#34;&gt;&#xA;                &lt;option value=&#34;sprint&#34;&gt;Sprint Triathlon&lt;/option&gt;&#xA;                &lt;option value=&#34;olympic&#34; selected&gt;Olympic Triathlon&lt;/option&gt;&#xA;                &lt;option value=&#34;70.3&#34;&gt;70.3 Ironman&lt;/option&gt;&#xA;                &lt;option value=&#34;ironman&#34;&gt;Ironman&lt;/option&gt;&#xA;            &lt;/select&gt;&#xA;        &lt;/div&gt;&#xA;&#xA;        &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;label for=&#34;swim&#34;&gt;Swim Pace (minutes per 100 meters):&lt;/label&gt;&#xA;            &lt;input type=&#34;number&#34; id=&#34;swim&#34; step=&#34;0.1&#34; value=&#34;2.0&#34;&gt;&#xA;            &lt;div class=&#34;event-time&#34;&gt;Swim Time: &lt;span id=&#34;swimTime&#34;&gt;0:00:00&lt;/span&gt;&lt;/div&gt;&#xA;        &lt;/div&gt;&#xA;&#xA;        &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;label for=&#34;t1&#34;&gt;T1 Transition Time (minutes):&lt;/label&gt;&#xA;            &lt;input type=&#34;number&#34; id=&#34;t1&#34; step=&#34;0.1&#34; value=&#34;2.0&#34;&gt;&#xA;        &lt;/div&gt;&#xA;&#xA;        &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;label for=&#34;bike&#34;&gt;Bike Speed (mph):&lt;/label&gt;&#xA;            &lt;input type=&#34;number&#34; id=&#34;bike&#34; step=&#34;0.1&#34; value=&#34;20.0&#34;&gt;&#xA;            &lt;div class=&#34;event-time&#34;&gt;Bike Time: &lt;span id=&#34;bikeTime&#34;&gt;0:00:00&lt;/span&gt;&lt;/div&gt;&#xA;        &lt;/div&gt;&#xA;&#xA;        &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;label for=&#34;t2&#34;&gt;T2 Transition Time (minutes):&lt;/label&gt;&#xA;            &lt;input type=&#34;number&#34; id=&#34;t2&#34; step=&#34;0.1&#34; value=&#34;1.0&#34;&gt;&#xA;        &lt;/div&gt;&#xA;&#xA;        &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;label for=&#34;run&#34;&gt;Run Pace (minutes per mile):&lt;/label&gt;&#xA;            &lt;input type=&#34;number&#34; id=&#34;run&#34; step=&#34;0.1&#34; value=&#34;8.0&#34;&gt;&#xA;            &lt;div class=&#34;event-time&#34;&gt;Run Time: &lt;span id=&#34;runTime&#34;&gt;0:00:00&lt;/span&gt;&lt;/div&gt;&#xA;        &lt;/div&gt;&#xA;&#xA;        &lt;div id=&#34;result&#34;&gt;&lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;    &lt;script&gt;&#xA;        const raceDistances = {&#xA;            sprint: { swim: 750, bike: 20, run: 5 },&#xA;            olympic: { swim: 1500, bike: 40, run: 10 },&#xA;            &#39;70.3&#39;: { swim: 1931, bike: 90, run: 21.1 },&#xA;            ironman: { swim: 3862, bike: 180, run: 42.2 }&#xA;        };&#xA;&#xA;        function formatTime(minutes) {&#xA;            const hours = Math.floor(minutes / 60);&#xA;            const mins = Math.floor(minutes % 60);&#xA;            const secs = Math.round((minutes * 60) % 60);&#xA;            return `${hours}:${mins.toString().padStart(2, &#39;0&#39;)}:${secs.toString().padStart(2, &#39;0&#39;)}`;&#xA;        }&#xA;&#xA;        function calculateTime() {&#xA;            // Get input values&#xA;            const raceType = document.getElementById(&#39;raceType&#39;).value;&#xA;            const swimPace = parseFloat(document.getElementById(&#39;swim&#39;).value);&#xA;            const bikeSpeed = parseFloat(document.getElementById(&#39;bike&#39;).value);&#xA;            const runPace = parseFloat(document.getElementById(&#39;run&#39;).value);&#xA;            const t1 = parseFloat(document.getElementById(&#39;t1&#39;).value) || 0;&#xA;            const t2 = parseFloat(document.getElementById(&#39;t2&#39;).value) || 0;&#xA;&#xA;            // Validate inputs&#xA;            if ([swimPace, bikeSpeed, runPace, t1, t2].some(x =&gt; x &lt; 0 || isNaN(x))) {&#xA;                document.getElementById(&#39;result&#39;).textContent = &#34;Please enter valid non-negative numbers&#34;;&#xA;                return;&#xA;            }&#xA;&#xA;            // Get race distances&#xA;            const distances = raceDistances[raceType];&#xA;            const swimDistance = distances.swim; // meters&#xA;            const bikeDistance = distances.bike * 0.621371; // convert km to miles&#xA;            const runDistance = distances.run * 0.621371; // convert km to miles&#xA;&#xA;            // Calculate individual times&#xA;            const swimTime = (swimPace * swimDistance) / 100;&#xA;            const bikeTime = (bikeDistance / bikeSpeed) * 60;&#xA;            const runTime = runPace * runDistance;&#xA;&#xA;            // Display individual event times&#xA;            document.getElementById(&#39;swimTime&#39;).textContent = formatTime(swimTime);&#xA;            document.getElementById(&#39;bikeTime&#39;).textContent = formatTime(bikeTime);&#xA;            document.getElementById(&#39;runTime&#39;).textContent = formatTime(runTime);&#xA;&#xA;            // Calculate total time&#xA;            const totalMinutes = swimTime + t1 + bikeTime + t2 + runTime;&#xA;            &#xA;            // Display formatted total time&#xA;            document.getElementById(&#39;result&#39;).textContent = &#xA;                `Total Time (${document.getElementById(&#39;raceType&#39;).options[document.getElementById(&#39;raceType&#39;).selectedIndex].text}): ${formatTime(totalMinutes)}`;&#xA;        }&#xA;&#xA;        // Add event listeners&#xA;        document.querySelectorAll(&#39;input, select&#39;).forEach(element =&gt; {&#xA;            element.addEventListener(&#39;input&#39;, calculateTime);&#xA;        });&#xA;&#xA;        // Initial calculation&#xA;        calculateTime();&#xA;    &lt;/script&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;</description>
    </item>
  </channel>
</rss>
